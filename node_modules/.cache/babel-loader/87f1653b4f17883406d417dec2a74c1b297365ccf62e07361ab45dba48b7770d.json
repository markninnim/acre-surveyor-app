{"ast":null,"code":"const isLocalhost=Boolean(window.location.hostname==='localhost'||window.location.hostname==='[::1]'||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));export function register(config){if('serviceWorker'in navigator){const publicUrl=new URL(process.env.PUBLIC_URL,window.location.href);if(publicUrl.origin!==window.location.origin)return;window.addEventListener('load',()=>{const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){checkValidServiceWorker(swUrl,config);navigator.serviceWorker.ready.then(()=>console.log('App is being served cache-first by a service worker.'));}else{registerValidSW(swUrl,config);}});}}function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(!installingWorker)return;installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){console.log('New content is available; please refresh.');if(config&&config.onUpdate)config.onUpdate(registration);}else{console.log('Content is cached for offline use.');if(config&&config.onSuccess)config.onSuccess(registration);}}};};}).catch(error=>{console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl,config){fetch(swUrl,{headers:{'Service-Worker':'script'}}).then(response=>{const contentType=response.headers.get('content-type');if(response.status===404||contentType&&contentType.indexOf('javascript')===-1){navigator.serviceWorker.ready.then(registration=>registration.unregister().then(()=>{window.location.reload();}));}else{registerValidSW(swUrl,config);}}).catch(()=>{console.log('No internet connection. App is running in offline mode.');});}export function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>registration.unregister()).catch(error=>console.error(error.message));}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","publicUrl","URL","process","env","PUBLIC_URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message"],"sources":["/Users/markninnim/Downloads/survey-quote-app-for-vercel/src/serviceWorkerRegistration.js"],"sourcesContent":["\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '[::1]' ||\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) return;\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() =>\n          console.log('App is being served cache-first by a service worker.')\n        );\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (!installingWorker) return;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log('New content is available; please refresh.');\n            if (config && config.onUpdate) config.onUpdate(registration);\n          } else {\n            console.log('Content is cached for offline use.');\n            if (config && config.onSuccess) config.onSuccess(registration);\n          }\n        }\n      };\n    };\n  }).catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } }).then(response => {\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType && contentType.indexOf('javascript') === -1)\n    ) {\n      navigator.serviceWorker.ready.then(registration =>\n        registration.unregister().then(() => {\n          window.location.reload();\n        })\n      );\n    } else {\n      registerValidSW(swUrl, config);\n    }\n  }).catch(() => {\n    console.log('No internet connection. App is running in offline mode.');\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => registration.unregister())\n      .catch(error => console.error(error.message));\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}